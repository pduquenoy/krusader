0001    0002    2000               	.org $20000003      2003             	.start MAIN0004    	0005    ; Constants0006    0007      0008             BS	=$08		; backspace0008    0009    	.byte	@001, @010, @1100010    0011      0020             SP	=$20		; space0012      000D             CR	=$0D		; carriage return0013      000A             LF	=$0A		; line feed0014      001B             ESC	=$1B		; escape0015      007F             INMASK  =$7F0016      00FF             FAIL	=$FF0017    	0018    ; Zero page storage	0019      0000             ALO	=$00		; Address of the data array0020      0001             AHI	=$010021      0002             SIZEX	=$02		; use a SIZEX rows by SIZEY columns display	0022      0003             SIZEY	=$030023      0004             STYLE	=$04		; store 0, 1 or 2 for 1, 2 or 4 triangles0024      0005             MOD	=$050025      0006             TEMPLO	=$06		; Address of particular element0026      0007             TEMPHI	=$070027      0008             CURVAL	=$080028      0009             SAVX	=$09		; Store X and Y values here0029      000A             SAVY	=$0A0030      000B             TEMPX	=$0B		; modified sizes stored here when necessary0031      000C             TEMPY	=$0C0032      000D             SCRTCH	=$0D0033      0006             INBUF	=TEMPLO0034      0010             SYMBLS	=$100035    	0036    MAIN	0037    2003  20 41 22     	JSR CRLF0038    2006  A9 00        	LDA #$00039    2008  85 00        	STA ALO0040    200A  A9 10        	LDA #$100041    200C  85 01        	STA AHI0042    200E  20 46 20     	JSR INPUTS0043    2011  20 F7 20     	JSR CALC0044    2014  20 A5 21     	JSR DRAW0045    2017  20 4B 22     	JSR GETCH0046    201A  C9 1B        	CMP #ESC0047    201C  D0 E5        	BNE MAIN0048    201E  60           	RTS0049    0050      0006             ROWSZ	=$60051    ROWS	.ASCII " ?SWOR"0052      0009             COLSZ	=$90053    COLS	.ASCII " ?SNMULOC"0054      0009             SYMSZ	=$90055    SYMS	.ASCII " ?SLOBMYS"0056      000F             STYLSZ	=$F0057    STYLES	.ASCII " ?)3,2,1( ELYTS"0058    0059    INPUTS0060    2046  A2 06        .ROW	LDX #ROWSZ0061    2048  BD 1E 20     .LOOP1	LDA ROWS-1,X0062    204B  20 EF FF     	JSR OUTCH0063    204E  CA           	DEX0064    204F  D0 F7        	BNE .LOOP10065    2051  A5 02        	LDA SIZEX0066    2053  20 C3 20     	JSR INPUT0067    2056  C9 03        	CMP #$30068    2058  30 EC        	BMI .ROW0069    205A  85 02        	STA SIZEX0070    205C  85 0B        	STA TEMPX0071    205E  A2 09        .COL	LDX #COLSZ0072    2060  BD 24 20     .LOOP2	LDA COLS-1,X0073    2063  20 EF FF     	JSR OUTCH0074    2066  CA           	DEX0075    2067  D0 F7        	BNE .LOOP20076    2069  A5 03        	LDA SIZEY0077    206B  20 C3 20     	JSR INPUT0078    206E  C9 03        	CMP #$30079    2070  30 EC        	BMI .COL0080    2072  C9 28        	CMP #$280081    2074  10 E8        	BPL .COL0082    2076  85 03        	STA SIZEY0083    2078  85 0C        	STA TEMPY0084    207A  A2 09        .SYM	LDX #SYMSZ0085    207C  BD 2D 20     .LOOP3	LDA SYMS-1,X0086    207F  20 EF FF     	JSR OUTCH0087    2082  CA           	DEX0088    2083  D0 F7        	BNE .LOOP30089    2085  20 4B 22     .SLOOP	JSR GETCH0090    2088  C9 1B        	CMP #ESC0091    208A  D0 03        	BNE .GET0092    208C  68           	PLA0093    208D  68           	PLA0094    208E  60           	RTS0095    208F  C9 0D        .GET	CMP #CR0096    2091  F0 0A        	BEQ .MOD0097    2093  48           	PHA0098    2094  20 EF FF     	JSR OUTCH0099    2097  68           	PLA0100    2098  E8           	INX0101    2099  95 10        	STA SYMBLS,X0102    209B  D0 E8        	BNE .SLOOP0103    209D  8A           .MOD	TXA0104    209E  F0 03        	BEQ .KEEP0105    20A0  E8           	INX0106    20A1  86 05        	STX MOD0107    20A3  20 41 22     .KEEP	JSR CRLF0108    20A6  A2 0F        .STYL	LDX #STYLSZ0109    20A8  BD 36 20     .LOOP4	LDA STYLES-1,X0110    20AB  20 EF FF     	JSR OUTCH0111    20AE  CA           	DEX0112    20AF  D0 F7        	BNE .LOOP40113    20B1  E6 04        	INC STYLE0114    20B3  A5 04        	LDA STYLE0115    20B5  20 C3 20     	JSR INPUT0116    20B8  F0 EC        	BEQ .STYL0117    20BA  C9 04        	CMP #$40118    20BC  10 E8        	BPL .STYL0119    20BE  85 04        	STA STYLE0120    20C0  C6 04        	DEC STYLE0121    20C2  60           .DONE	RTS0122    	0123    INPUT0124    20C3  85 0D        	STA SCRTCH		; save default value0125    20C5  A2 00        	LDX #$00126    20C7  86 06        	STX INBUF0127    20C9  86 07        	STX INBUF+10128    20CB  86 08        	STX INBUF+20129    20CD  20 4B 22     .NEXT	JSR GETCH0130    20D0  C9 1B        	CMP #ESC0131    20D2  D0 05        	BNE .SKIP0132    20D4  68           	PLA0133    20D5  68           	PLA0134    20D6  68           	PLA0135    20D7  68           	PLA0136    20D8  60           	RTS0137    20D9  20 EF FF     .SKIP	JSR OUTCH0138    20DC  C9 0D        	CMP #CR0139    20DE  F0 05        	BEQ .CVT0140    20E0  95 06        	STA INBUF,X0141    20E2  E8           	INX0142    20E3  D0 E8        	BNE .NEXT0143    20E5  8A           .CVT	TXA0144    20E6  F0 09        	BEQ .SAME0145    20E8  20 15 22     	JSR BYT2D0146    	.if APPLE10147    20EB  48           	PHA0148    20EC  20 41 22     	JSR CRLF0149    20EF  68           	PLA0150    	.endif0151    20F0  60           	RTS0152    .SAME	0153    	.if APPLE10154    20F1  20 41 22     	JSR CRLF0155    	.endif0156    20F4  A5 0D        	LDA SCRTCH0157    20F6  60           	RTS0158    	0159    CALC			; Loop over all rows and columns to calculate the data array0160    20F7  A2 01        	LDX #$10161    20F9  A5 04        	LDA STYLE0162    20FB  F0 16        	BEQ .LOOPX0163    20FD  C9 01        	CMP #$10164    20FF  D0 04        	BNE .SKIP0165    2101  C6 0B        	DEC TEMPX0166    2103  D0 0E        	BNE .LOOPX0167    2105  A5 02        .SKIP	LDA SIZEX	; halve the sizes for this style0168    2107  4A           	LSR0169    2108  69 00        	ADC #$00170    210A  85 0B        	STA TEMPX0171    210C  A5 03        	LDA SIZEY0172    210E  4A           	LSR0173    210F  69 00        	ADC #$00174    2111  85 0C        	STA TEMPY0175    2113  A0 01        .LOOPX	LDY #$10176    2115  A9 00        .LOOPY	LDA #$00177    2117  86 09        	STX SAVX0178    2119  84 0A        	STY SAVY0179    211B  CA           	DEX0180    211C  20 C4 21     	JSR GETVAL	; get address and value for a(i-1,j)0181    211F  85 08        	STA CURVAL	; store the value0182    2121  E8           	INX0183    2122  88           	DEY0184    2123  20 C4 21     	JSR GETVAL	; get address and value for a(i,j-1)0185    2126  C8           	INY0186    2127  18           	CLC0187    2128  65 08        	ADC CURVAL	; do the sum0188    212A  20 86 21     	JSR AMODA	; do the modulus0189    212D  48           	PHA		; and save the result0190    212E  20 EF 21     	JSR GETADR	; get address for a(i,j)0191    2131  68           	PLA		; retrieve the result0192    2132  A2 00        	LDX #$00193    2134  81 06        	STA (TEMPLO,X)	; save to the data array	0194    2136  A6 04        	LDX STYLE0195    2138  F0 3D        	BEQ .00196    213A  CA           	DEX0197    213B  F0 22        	BEQ .10198    213D  48           	PHA0199    213E  A6 09        	LDX SAVX	; 4 triangles => 3 copies0200    2140  20 9B 21     	JSR Y2CMY0201    2143  20 EF 21     	JSR GETADR0202    2146  68           	PLA0203    2147  48           	PHA0204    2148  A2 00        	LDX #$00205    214A  81 06        	STA (TEMPLO,X)0206    214C  A6 09        	LDX SAVX0207    214E  A4 0A        	LDY SAVY0208    2150  20 91 21     	JSR X2RMX0209    2153  20 EF 21     	JSR GETADR0210    2156  68           	PLA0211    2157  48           	PHA0212    2158  A2 00        	LDX #$00213    215A  81 06        	STA (TEMPLO,X)0214    215C  38           	SEC0215    215D  B0 08        	BCS .COPY	0216    215F  48           .1	PHA0217    2160  A5 03        	LDA SIZEY	; 2 triangles, so copy value and adjust limit0218    2162  38           	SEC		; range of Y is from 0 to SIZEX - X0219    2163  E5 09        	SBC SAVX0220    2165  85 0C        	STA TEMPY0221    2167  A6 09        .COPY	LDX SAVX	; restore X0222    2169  20 91 21     	JSR X2RMX0223    216C  20 9B 21     	JSR Y2CMY0224    216F  20 EF 21     	JSR GETADR0225    2172  68           	PLA0226    2173  A2 00        	LDX #$00227    2175  81 06        	STA (TEMPLO,X)	; save to the data array0228    2177  A6 09        .0	LDX SAVX	; restore X0229    2179  A4 0A        	LDY SAVY	; restore Y0230    217B  C8           	INY0231    217C  C4 0C        	CPY TEMPY0232    217E  D0 95        	BNE .LOOPY0233    2180  E8           	INX0234    2181  E4 0B        	CPX TEMPX0235    2183  D0 8E        	BNE .LOOPX0236    2185  60           	RTS0237    0238    AMODA			; A -> A MOD MOD0239    2186  38           	SEC0240    2187  E5 05        	SBC MOD0241    2189  F0 05        	BEQ .DONE0242    218B  10 F9        	BPL AMODA0243    218D  18           	CLC0244    218E  65 05        	ADC MOD0245    2190  60           .DONE	RTS0246    	0247    X2RMX			; input X, return X = SIZEX - X - 10248    			; preserve A0249    2191  48           	PHA0250    2192  A5 02        	LDA SIZEX0251    2194  38           	SEC0252    2195  E5 09        	SBC SAVX0253    2197  AA           	TAX0254    2198  CA           	DEX0255    2199  68           	PLA0256    219A  60           	RTS0257    0258    Y2CMY			; input Y, return Y = SIZEY - Y - 10259    			; preserve A0260    219B  48           	PHA0261    219C  A5 03        	LDA SIZEY0262    219E  38           	SEC0263    219F  E5 0A        	SBC SAVY0264    21A1  A8           	TAY0265    21A2  88           	DEY0266    21A3  68           	PLA0267    21A4  60           	RTS0268    	0269    DRAW			; Loop over all rows and columns to draw the array0270    21A5  A2 00        	LDX #$00271    21A7  A0 00        .LOOPX	LDY #$00272    21A9  20 41 22     	JSR CRLF0273    21AC  20 C4 21     .LOOPY	JSR GETVAL	; get value for a(i,j)0274    21AF  86 09        	STX SAVX0275    21B1  AA           	TAX0276    21B2  B5 10        	LDA SYMBLS,X0277    21B4  A6 09        	LDX SAVX0278    21B6  20 EF FF     .PRINT	JSR OUTCH0279    21B9  C8           	INY0280    21BA  C4 03        	CPY SIZEY0281    21BC  D0 EE        	BNE .LOOPY0282    21BE  E8           	INX0283    21BF  E4 02        	CPX SIZEX0284    21C1  D0 E4        	BNE .LOOPX0285    21C3  60           	RTS0286    0287    GETVAL			; if either index is 0, answer is 10288    			; also any edge value for combined triangles is 10289    21C4  8A           	TXA		; check X for boundary value0290    21C5  F0 25        	BEQ .BNDRY0291    21C7  98           	TYA		; check Y for boundary value0292    21C8  F0 22        	BEQ .BNDRY0293    21CA  A5 04        	LDA STYLE0294    21CC  F0 10        	BEQ .SKIP0295    21CE  8A           	TXA0296    21CF  38           	SEC0297    21D0  E5 02        	SBC SIZEX0298    21D2  C9 FF        	CMP #$FF0299    21D4  F0 16        	BEQ .BNDRY	0300    21D6  98           	TYA0301    21D7  38           	SEC0302    21D8  E5 03        	SBC SIZEY0303    21DA  C9 FF        	CMP #$FF0304    21DC  F0 0E        	BEQ .BNDRY0305    21DE  20 EF 21     .SKIP	JSR GETADR	; get address for a(i,j)0306    21E1  86 0D        	STX SCRTCH	; save X0307    21E3  A2 00        	LDX #$00308    21E5  A1 06        	LDA (TEMPLO,X)	; get the value0309    21E7  A6 0D        	LDX SCRTCH	; restore X0310    21E9  18           	CLC0311    21EA  90 02        	BCC .DONE0312    21EC  A9 01        .BNDRY	LDA #$1		; boundary value0313    21EE  60           .DONE	RTS0314    	0315    0316    GETADR			; Put address of the data entry in TEMPLO,HI0317    			; Row index is in X, column index is in Y0318    21EF  8A           	TXA0319    21F0  48           	PHA0320    21F1  A5 01        	LDA AHI0321    21F3  85 07        	STA TEMPHI0322    21F5  A5 00        	LDA ALO0323    21F7  85 06        	STA TEMPLO0324    21F9  E0 00        	CPX #$0		; First calculate I * SIZE0325    21FB  F0 0C        	BEQ .NEXT0326    21FD  18           	CLC0327    21FE  65 03        .LOOP	ADC SIZEY0328    2200  85 06        	STA TEMPLO0329    2202  90 02        	BCC .SKIP0330    2204  E6 07        	INC TEMPHI0331    2206  CA           .SKIP	DEX0332    2207  D0 F5        	BNE .LOOP0333    2209  98           .NEXT	TYA		; Now add J0334    220A  65 06        	ADC TEMPLO0335    220C  85 06        	STA TEMPLO0336    220E  90 02        	BCC .DONE0337    2210  E6 07        	INC TEMPHI0338    2212  68           .DONE	PLA0339    2213  AA           	TAX0340    2214  60           	RTS0341    	0342    ; Utility subroutines0343    0344    BYT2D			; convert the ASCII byte (1 or 2 chars) at INBUF to decimal0345    			; result in A ($FF for fail)0346    2215  A5 06        	LDA INBUF0347    2217  20 38 22     	JSR .A2D	0348    221A  C9 FF        	CMP #FAIL	; indicates conversion error		0349    221C  F0 20        	BEQ .ERR0350    221E  48           	PHA0351    221F  A5 07        	LDA INBUF+10352    2221  20 38 22     	JSR .A2D0353    2224  C9 FF        	CMP #FAIL0354    2226  D0 02        	BNE .CONT0355    2228  68           	PLA		; just ignore 2nd character0356    2229  60           	RTS0357    222A  85 0D        .CONT	STA SCRTCH0358    222C  68           	PLA0359    222D  85 08        	STA CURVAL0360    222F  0A           	ASL		; x 20361    2230  0A           	ASL		; x 40362    2231  18           	CLC0363    2232  65 08        	ADC CURVAL	; x 50364    2234  0A           	ASL		; x 100365    2235  65 0D        	ADC SCRTCH0366    2237  60           	RTS0367    .A2D 			; convert ASCII code in A to a DEC digit0368    2238  49 30            	EOR #$30  0369    223A  C9 0A        	CMP #$0A  0370    223C  90 02        	BCC .VALID  0371    223E  A9 FF        .ERR	LDA #FAIL	; this value can never be from a single digit0372    2240  60           .VALID	RTS0373    		0374    ; I/O subroutines0375    	0376    CRLF			; Go to a new line.0377    2241  A9 0D        	LDA #CR		; "CR"0378    	.if APPLE10379    2243  20 EF FF     	JSR OUTCH0380    2246  A9 0A        	LDA #LF		; "LF" - is this needed for the Apple 1?0381    2248  4C EF FF     	JMP OUTCH0382    	.endif0383    0384    GETCH   		; Get a character from the keyboard.0385    224B  AD 04 E0     	LDA KBDRDY0386    	.if APPLE10387    224E  F0 FB        	BEQ GETCH0388    	.endif0389    2250  60           	RTS0390    	0391    	.if APPLE10392      E000             IOMEM	=$E0000393      E001             PUTCH	=IOMEM+10394      E004             KBD	=IOMEM+40395      E004             KBDRDY  =IOMEM+40396    0397    FF1F               	.ORG $FF1F0398    	.BYTE $BB	0399    0400    FFDC               	.ORG $FFDC0401    FFDC  48           OUTHEX	PHA 		; Print 1 hex byte. 0402    FFDD  4A           	LSR0403    FFDE  4A           	LSR 0404    FFDF  4A           	LSR0405    FFE0  4A           	LSR 0406    FFE1  20 E5 FF     	JSR PRHEX0407    FFE4  68           	PLA 0408    FFE5  29 0F        PRHEX	AND #$0F	; Print 1 hex digit0409    FFE7  09 30        	ORA #$300410    FFE9  C9 3A        	CMP #$3A0411    FFEB  90 02        	BCC OUTCH0412    FFED  69 06        	ADC #$060413    FFEF  8D 01 E0     OUTCH	STA PUTCH0414    FFF2  60           	RTS  0415    	.endif0416    	
0417    